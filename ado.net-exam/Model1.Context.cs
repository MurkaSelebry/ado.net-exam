//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ado.net_exam
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Tourist_Entities : DbContext
    {
        public Tourist_Entities()
            : base("name=Tourist_Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Клиенты_агенства> Клиенты_агенства { get; set; }
        public virtual DbSet<Работники_турагентства> Работники_турагентства { get; set; }
        public virtual DbSet<Сотрудники_привязаныне_к_странам__турам> Сотрудники_привязаныне_к_странам__турам { get; set; }
        public virtual DbSet<Архивные_туры> Архивные_туры { get; set; }
        public virtual DbSet<Города> Города { get; set; }
        public virtual DbSet<Гостиницы> Гостиницы { get; set; }
        public virtual DbSet<Гостиницы_для_тура> Гостиницы_для_тура { get; set; }
        public virtual DbSet<Достопримечательности> Достопримечательности { get; set; }
        public virtual DbSet<Посещеннные_города> Посещеннные_города { get; set; }
        public virtual DbSet<Посещеннные_страны> Посещеннные_страны { get; set; }
        public virtual DbSet<Страны> Страны { get; set; }
        public virtual DbSet<Туры> Туры { get; set; }
        public virtual DbSet<actual_tours> actual_tours { get; set; }
        public virtual DbSet<v_employees> v_employees { get; set; }
    
        [DbFunction("Tourist_Entities", "popular_tour")]
        public virtual IQueryable<popular_tour_Result> popular_tour()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<popular_tour_Result>("[Tourist_Entities].[popular_tour]()");
        }
    
        [DbFunction("Tourist_Entities", "unpopular_tour")]
        public virtual IQueryable<unpopular_tour_Result> unpopular_tour()
        {
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<unpopular_tour_Result>("[Tourist_Entities].[unpopular_tour]()");
        }
    
        public virtual ObjectResult<diap_start_date_Result> diap_start_date(Nullable<System.DateTime> date1, Nullable<System.DateTime> date2)
        {
            var date1Parameter = date1.HasValue ?
                new ObjectParameter("date1", date1) :
                new ObjectParameter("date1", typeof(System.DateTime));
    
            var date2Parameter = date2.HasValue ?
                new ObjectParameter("date2", date2) :
                new ObjectParameter("date2", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<diap_start_date_Result>("diap_start_date", date1Parameter, date2Parameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> in_tour(string fIO)
        {
            var fIOParameter = fIO != null ?
                new ObjectParameter("FIO", fIO) :
                new ObjectParameter("FIO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("in_tour", fIOParameter);
        }
    
        public virtual ObjectResult<popular_arc_tour_Result> popular_arc_tour()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<popular_arc_tour_Result>("popular_arc_tour");
        }
    
        public virtual int popular_country(ObjectParameter country)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("popular_country", country);
        }
    
        public virtual ObjectResult<string> popular_tourist()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("popular_tourist");
        }
    
        public virtual ObjectResult<string> show_list(string fIO)
        {
            var fIOParameter = fIO != null ?
                new ObjectParameter("FIO", fIO) :
                new ObjectParameter("FIO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("show_list", fIOParameter);
        }
    
        public virtual ObjectResult<transport_method_Result> transport_method(string transpM)
        {
            var transpMParameter = transpM != null ?
                new ObjectParameter("transpM", transpM) :
                new ObjectParameter("transpM", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<transport_method_Result>("transport_method", transpMParameter);
        }
    
        public virtual int visit_country(string country)
        {
            var countryParameter = country != null ?
                new ObjectParameter("country", country) :
                new ObjectParameter("country", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("visit_country", countryParameter);
        }
    
        public virtual ObjectResult<string> where_is_tourist(string fIO)
        {
            var fIOParameter = fIO != null ?
                new ObjectParameter("FIO", fIO) :
                new ObjectParameter("FIO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("where_is_tourist", fIOParameter);
        }
    }
}
